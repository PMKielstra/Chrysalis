N: 128
Factored level 0 of 2 (15.92542028427124)
Traceback (most recent call last):
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/main.py", line 55, in <module>
    factor_forest = build_factor_forest(pool, profile)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 176, in build_factor_forest
    return off_cols_lists, make_trees([], profile.dimens - 1)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 174, in make_trees
    return [make_trees(previous_off_cols + [off_cols], level - 1) for off_cols in off_cols_lists]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 174, in <listcomp>
    return [make_trees(previous_off_cols + [off_cols], level - 1) for off_cols in off_cols_lists]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 174, in make_trees
    return [make_trees(previous_off_cols + [off_cols], level - 1) for off_cols in off_cols_lists]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 174, in <listcomp>
    return [make_trees(previous_off_cols + [off_cols], level - 1) for off_cols in off_cols_lists]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 173, in make_trees
    return parallel_factor_to_tree(pool, profile, previous_off_cols)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 151, in parallel_factor_to_tree
    leaf.collect()
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 62, in collect
    self.rows_mats_down = [q for r in self.rows_mats_down_async for q in r.result()]
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/global/u2/k/kielstra/Chrysalis/TreeBasedTensor/factor.py", line 62, in <listcomp>
    self.rows_mats_down = [q for r in self.rows_mats_down_async for q in r.result()]
                                                                         ^^^^^^^^^^
  File "/global/homes/k/kielstra/.conda/envs/venv/lib/python3.11/concurrent/futures/_base.py", line 456, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/global/homes/k/kielstra/.conda/envs/venv/lib/python3.11/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
concurrent.futures.process.BrokenProcessPool: A process in the process pool was terminated abruptly while the future was running or pending.
slurmstepd: error: Detected 1 oom_kill event in StepId=11497476.0. Some of the step tasks have been OOM Killed.
srun: error: nid005697: task 0: Out Of Memory
srun: Terminating StepId=11497476.0
